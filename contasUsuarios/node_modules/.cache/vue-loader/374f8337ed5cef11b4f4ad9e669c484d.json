{"remainingRequest":"C:\\wamp64\\www\\smartpoint\\smartpoint\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\smartpoint\\smartpoint\\src\\views\\Cadastro\\LinhaForm.vue?vue&type=style&index=0&id=3ae2d730&scoped=true&lang=css&","dependencies":[{"path":"C:\\wamp64\\www\\smartpoint\\smartpoint\\src\\views\\Cadastro\\LinhaForm.vue","mtime":1601482110526},{"path":"C:\\wamp64\\www\\smartpoint\\smartpoint\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\smartpoint\\smartpoint\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\smartpoint\\smartpoint\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\smartpoint\\smartpoint\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\smartpoint\\smartpoint\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jZW50ZXJlZC1pbnB1dCA+Pj4gaW5wdXQgew0KICB0ZXh0LWFsaWduOiByaWdodDsNCn0NCg=="},{"version":3,"sources":["LinhaForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmVA;AACA;AACA","file":"LinhaForm.vue","sourceRoot":"src/views/Cadastro","sourcesContent":["<template>\r\n  <v-content style=\"margin: 10px\">\r\n    <v-snackbar\r\n      v-model=\"snackbar\"\r\n      :color=\"colorBorder\"\r\n      shaped\r\n      timeout=\"3000\"\r\n      :vertical=\"vertical\"\r\n    >\r\n      <b>{{ text }}</b>\r\n      <template v-slot:action=\"{ attrs }\">\r\n        <v-btn v-bind=\"attrs\" @click=\"snackbar = false\" icon dark small>\r\n          <v-icon>mdi-close</v-icon>\r\n        </v-btn>\r\n        <!-- <v-btn icon v-bind=\"attrs\" @click=\"snackbar = false\">mdi-magnify</v-btn> -->\r\n      </template>\r\n    </v-snackbar>\r\n\r\n    <k-loading title=\"Carregando\" :dialog=\"dialogLoading\"></k-loading>\r\n\r\n    <k-dialog\r\n      @fecharDialog=\"fecharDialogMessage\"\r\n      :dialog=\"dialogMessage\"\r\n      title=\"Mensagem\"\r\n      :text=\"textError\"\r\n    ></k-dialog>\r\n\r\n    <v-container>\r\n      <v-row>\r\n        <v-breadcrumbs style=\"margin-left: -10px\" :items=\"caminho\">\r\n          <template v-slot:divider>\r\n            <!-- <v-icon>mdi-home</v-icon> -->\r\n          </template>\r\n          <template v-slot:item=\"{ item }\">\r\n            <router-link :to=\"item.href\">\r\n              {{ item.text }}\r\n            </router-link>\r\n          </template>\r\n        </v-breadcrumbs>\r\n      </v-row>\r\n\r\n      <!-- <v-row ref=\"form\"> -->\r\n      <v-col cols=\"12\" v-if=\"!idLinha\">\r\n        <h3>\r\n          <b>Nova Linha</b>\r\n        </h3>\r\n        <span>\r\n          <b>Adicione um Nova perfil no sistema</b>\r\n        </span>\r\n      </v-col>\r\n\r\n      <v-col cols=\"12\" v-if=\"idLinha\">\r\n        <h3>\r\n          <b>Editar Linha</b>\r\n        </h3>\r\n        <span>\r\n          <b>Alterando dados do Linha no sistema</b>\r\n        </span>\r\n      </v-col>\r\n      <v-card flat>\r\n        <v-card-text>\r\n          <v-col cols=\"12\" sm=\"12\">\r\n            <v-row>\r\n              <span><b>Dados Gerais</b></span>\r\n            </v-row>\r\n\r\n            <v-row>\r\n              <v-col cols=\"12\" sm=\"8\">\r\n                <v-text-field\r\n                  outlined\r\n                  v-model=\"linha.nome\"\r\n                  label=\"Nome *\"\r\n                  placeholder=\"Nome da Linha\"\r\n                  :rules=\"[\r\n                    () => (!!linha.nome && linha.nome.length <= 30) || '',\r\n                  ]\"\r\n                  counter=\"30\"\r\n                  dense\r\n                  required\r\n                  maxlength=\"30\"\r\n                ></v-text-field>\r\n              </v-col>\r\n\r\n              <v-col cols=\"12\" sm=\"2\">\r\n                <v-text-field\r\n                  class=\"centered-input\"\r\n                  outlined\r\n                  v-model=\"linha.qtdeOperador\"\r\n                  label=\"Qtde. de Operadores\"\r\n                  placeholder=\"Cap de Operadores\"\r\n                  disabled\r\n                  style=\"text-align: right\"\r\n                  dense\r\n                  required\r\n                  @keypress=\"apenasNumeros\"\r\n                  type=\"number\"\r\n                ></v-text-field>\r\n              </v-col>\r\n\r\n              <v-col cols=\"12\" sm=\"2\">\r\n                <v-text-field\r\n                  class=\"centered-input\"\r\n                  outlined\r\n                  v-model=\"linha.capacidadeProdutiva\"\r\n                  label=\"Capacidade Produtiva\"\r\n                  placeholder=\"Cap de Operadores\"\r\n                  disabled\r\n                  type=\"time\"\r\n                  style=\"text-align: right\"\r\n                  dense\r\n                  required\r\n                  @keypress=\"apenasNumeros\"\r\n                ></v-text-field>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <v-row>\r\n              <span><b>Capacidade da Linha</b></span>\r\n            </v-row>\r\n\r\n            <v-row>\r\n              <span><b>Recursos TÃ©cnicos</b></span>\r\n            </v-row>\r\n\r\n            <v-card-actions>\r\n              <v-spacer></v-spacer>\r\n              <v-btn\r\n                color=\"orange lighten-1\"\r\n                @click=\"retornaListaLinhas()\"\r\n                large\r\n                dark\r\n                width=\"150\"\r\n                >Cancelar</v-btn\r\n              >\r\n\r\n              <v-btn\r\n                v-if=\"!isMobile && idLinha\"\r\n                color=\"orange darken-1\"\r\n                large\r\n                dark\r\n                width=\"150\"\r\n                @click=\"updateLinha()\"\r\n                >Salvar</v-btn\r\n              >\r\n\r\n              <v-btn\r\n                v-if=\"!isMobile && !idLinha\"\r\n                color=\"orange darken-1\"\r\n                large\r\n                dark\r\n                width=\"150\"\r\n                @click=\"saveLinha()\"\r\n                >Salvar</v-btn\r\n              >\r\n\r\n              <v-btn\r\n                v-else-if=\"isMobile && !idLinha\"\r\n                color=\"orange darken-1\"\r\n                large\r\n                dark\r\n                width=\"150\"\r\n                @click=\"saveLinha()\"\r\n                >Salvar</v-btn\r\n              >\r\n            </v-card-actions>\r\n          </v-col>\r\n        </v-card-text>\r\n      </v-card>\r\n      <!-- </v-row> -->\r\n    </v-container>\r\n  </v-content>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nvar validaNumeros = require(\"../../baseGenerica/validaNumeros.js\");\r\n\r\nimport Vue from \"vue\";\r\n\r\nimport KLoading from \"../../components/KLoading.vue\";\r\nimport KDialog from \"../../components/KDialog.vue\";\r\nimport KDataList from \"../../components/KDataList.vue\";\r\n\r\nimport Component from \"vue-class-component\";\r\nimport { Watch } from \"vue-property-decorator\";\r\n\r\nimport { Display } from \"../../configuration/display\";\r\nimport { Storage } from \"../../configuration/storage\";\r\n\r\nimport { Header, HeaderIcon, HeaderAction } from \"../../models/header\";\r\nimport { Headers } from \"../../models/headers\";\r\n\r\nimport { Validation, ValidationSchema } from \"../../baseGenerica/validation\";\r\n\r\nimport {\r\n  ILinhaFormView,\r\n  ILinhaFormController,\r\n} from \"../../contracts/Cadastro/LinhaFormContract\";\r\nimport { LinhaFormController } from \"../../controllers/Cadastro/LinhaFormController\";\r\n\r\n@Component({\r\n  components: {\r\n    KLoading,\r\n    KDialog,\r\n    KDataList,\r\n  },\r\n})\r\nexport default class LinhaForm extends Vue implements ILinhaFormView {\r\n  _controller?: ILinhaFormController;\r\n\r\n  caminho = [\r\n    {\r\n      text: \"Home\",\r\n      disabled: false,\r\n      href: \"/\",\r\n    },\r\n    {\r\n      text: \"Linhas\",\r\n      disabled: false,\r\n      href: \"/linhas\",\r\n    },\r\n  ];\r\n\r\n  //validate form\r\n  valid = true;\r\n  lazy = false;\r\n\r\n  isMobile = false;\r\n\r\n  isSucesso = false;\r\n\r\n  dialogLoading = false;\r\n  dialogMessage = false;\r\n  textError = \"\";\r\n\r\n  idLinha = \"\";\r\n\r\n  linha = {\r\n    //dados gerais\r\n    nome: \"\",\r\n    qtdeOperador: 0,\r\n    capacidadeProdutiva: \"00:00\",\r\n    deletado: \"N\",\r\n  };\r\n\r\n  //SNACKBAR\r\n  snackbar = false;\r\n  text = \"\";\r\n  vertical = true;\r\n  color = \"\";\r\n  colorBorder = \"\";\r\n\r\n  apenasNumeros(event: any) {\r\n    validaNumeros(event);\r\n  }\r\n\r\n  loading(visible: boolean): void {\r\n    this.dialogLoading = visible;\r\n  }\r\n\r\n  fecharDialogMessage() {\r\n    this.dialogMessage = false;\r\n    if (this.isSucesso) {\r\n      this.$router.push(\"/Linhas\");\r\n    }\r\n  }\r\n\r\n  retornaListaLinhas() {\r\n    this.$router.push(\"/Linhas\");\r\n  }\r\n\r\n  showMsg(msg: string, modo: number): void {\r\n    this.textError = msg;\r\n    if (modo == 1) {\r\n      this.isSucesso = true;\r\n    }\r\n    this.dialogMessage = true;\r\n  }\r\n\r\n  validate() {\r\n    let schema: ValidationSchema[] = [];\r\n\r\n    schema.push(new ValidationSchema(\"nome\", \"Nome\", \"string\", true, 30));\r\n    schema.push(\r\n      new ValidationSchema(\r\n        \"capacidadeOperador\",\r\n        \"Capacidade do Operador\",\r\n        \"string\",\r\n        true,\r\n        15\r\n      )\r\n    );\r\n\r\n    let result = new Validation().ValidSchema(schema, this.linha);\r\n    if (result.sucesso == false) {\r\n      this.colorBorder = \"error\";\r\n      this.color = \"error\";\r\n      this.text = result.mensagem;\r\n      this.snackbar = true;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  saveLinha() {\r\n    if (this.validate()) {\r\n    } else {\r\n      //this.solicitacao.user = parseInt(Storage.get(\"User\")!);\r\n      this._controller!.salvar(this.linha);\r\n    }\r\n  }\r\n\r\n  updateLinha() {\r\n    if (this.validate()) {\r\n    } else {\r\n      //this.solicitacao.user = parseInt(Storage.get(\"User\")!);\r\n      this._controller!.update(this.idLinha, this.linha);\r\n    }\r\n  }\r\n\r\n  carregarDtos(): void {\r\n    this.idLinha = this.$route.params.id;\r\n  }\r\n\r\n  showLinhaForEditar(item: any) {\r\n    //CARREGANDO DADOS DO FUNCIONARIO\r\n    this.linha = item;\r\n  }\r\n\r\n  created() {\r\n    this._controller = new LinhaFormController(this);\r\n    this._controller.carregarDtos(this.$route.params.id);\r\n    this.carregarDtos();\r\n    this.isMobile = Display.isMobile();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.centered-input >>> input {\r\n  text-align: right;\r\n}\r\n</style>\r\n"]}]}